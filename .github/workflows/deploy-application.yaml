name: deploy application

on:
  workflow_dispatch:

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  build-react:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src/frontend/test-app

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - uses: actions/cache@v3
        id: cache-node-modules
        env:
          cache-name: cache-node-modules
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install

      - run: npm run build

      - run: cp -r ./build/ ../../backend/test-app/public

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/elb-ec2
          role-session-name: eb-test-role
          aws-region: ap-northeast-1

      - name:  upload to s3
        run: |
          aws s3 sync ../../backend/test-app/public s3://eb-test-public --delete --quiet
    
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src/backend/test-app
    
    needs: build-react

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
          cache: 'pip'
      
      - name: install awsebcli
        run: |
          echo "~/.local/bin" >> $GITHUB_PATH
          python -m pip install --upgrade pip
          pip install setuptools --upgrade
          pip install awsebcli --upgrade

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/elb-ec2
          role-session-name: eb-test-role
          aws-region: ap-northeast-1
      
      - name: make eb config
        run: |
          mkdir -p ./.elasticbeanstalk
          touch ./.elasticbeanstalk/config.yml
          echo "${{ vars.EB_CONFIG_YML }}" > ./.elasticbeanstalk/config.yml
          cat ./.elasticbeanstalk/config.yml
      
      - name: deploy to eb
        run eb list
        run: eb deploy Test-env-1

