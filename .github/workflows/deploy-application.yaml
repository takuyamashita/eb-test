name: deploy application

on:
  workflow_dispatch:

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  build-react:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src/frontend/test-app

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      
      - name: make env file
        run: |
          touch .env
          echo "${{ secrets.REACT_ENV_FILE }}" > .env
      
      - uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}

      - run: npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

      - run: npm run build

      - run: cp -rf ./build/* ../../backend/test-app/public/

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/eb-test-github-actions-role
          role-session-name: eb-test-role
          aws-region: ap-northeast-1

      - name: upload to s3
        run: |
          aws s3 sync ../../backend/test-app/public s3://eb-test-public --delete --quiet
    
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src/backend/test-app
    
    needs: build-react

    steps:
      - uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/eb-test-github-actions-role
          role-session-name: eb-test-role
          aws-region: ap-northeast-1
      
      - name: make artifact
        run: git archive --format=zip HEAD -o main.zip
      
      - name: upload artifact
        run: aws s3 cp main.zip s3://${{ secrets.MAIN_ARTIFACT_BUCKET }}/main-artifact/main.zip
      
      - name: make version
        run: >
          aws elasticbeanstalk create-application-version
          --application-name eb-test
          --version-label 1.0.1
          --source-bundle S3Bucket="${{ secrets.MAIN_ARTIFACT_BUCKET }}",S3Key="main-artifact/main.zip"

